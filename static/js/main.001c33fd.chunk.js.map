{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","x","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contactOb","contacts_Contact","TextInputGroup","_ref","label","placeholder","onFieldChange","error","htmlFor","classnames","is-invalid","onChange","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4VAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAIvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEO,QAASP,EAAMK,SAASO,IAAK,SAAAC,GAAC,OAC9BA,EAAEL,KAAOP,EAAOQ,QAAQD,GACjBK,EAAIZ,EAAOQ,QACZI,MAGV,QACE,OAAOb,IAIAc,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAd,OAAAuB,EAAA,EAAAvB,CAAAgB,MAAAH,EAAAb,OAAAwB,EAAA,EAAAxB,CAAAW,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAT,OAAAa,MACEvB,MAAQ,CACNK,SAAU,GACVyB,SAAU,SAAA7B,GACRgB,EAAKc,SAAS,SAAA/B,GAAK,OAAID,EAAQC,EAAOC,OAJ5CgB,EAAA,OAAAd,OAAA6B,EAAA,EAAA7B,CAAAW,EAAAC,GAAAZ,OAAA8B,EAAA,EAAA9B,CAAAW,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAqBsBC,IAAMC,IAAI,8CArBhC,OAqBUN,EArBVE,EAAAK,KAwBI9B,KAAKY,SAAS,CAAE1B,SAAUqC,EAAIQ,OAxBlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WA4BI,OACEiB,EAAAb,EAAAc,cAACzD,EAAQkB,SAAT,CAAkBqB,MAAOhB,KAAKnB,OAC3BmB,KAAKmC,MAAMC,cA9BpBzC,EAAA,CAA8B0C,aAoCjBC,EAAW7D,EAAQ6D,SCKjBC,6MAnEb1D,MAAQ,CACN2D,iBAAiB,KAEnBC,YAAc,SAAAC,GACZ5C,EAAKc,SAAS,CAEZ4B,iBAAkB1C,EAAKjB,MAAM2D,qBAGjCG,oDAAgB,SAAArB,EAAOjC,EAAIsB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMgB,OAAN,8CAAArD,OAA2DF,IAFrD,OAIZsB,EAAS,CAAE5B,KAAM,iBAAkBO,QAASD,IAJhCoC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAoB,GAAApB,EAAA,SAMZd,EAAS,CAAE5B,KAAM,iBAAkBO,QAASD,IANhC,wBAAAoC,EAAAO,SAAAV,EAAAtB,KAAA,4IASP,IAAA8C,EAAA9C,KAAA+C,EAE4B/C,KAAKmC,MAAM/C,QAAtCC,EAFD0D,EAEC1D,GAAI2D,EAFLD,EAEKC,KAAMC,EAFXF,EAEWE,MAAOC,EAFlBH,EAEkBG,MACjBV,EAAoBxC,KAAKnB,MAAzB2D,gBACR,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,uBACblB,EAAAb,EAAAc,cAAA,UACGc,EACDf,EAAAb,EAAAc,cAAA,KACEkB,QAASN,EAAKL,YACdU,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBrB,EAAAb,EAAAc,cAAA,KACEiB,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMzD,EAAIsB,KAE7CsB,EAAAb,EAAAc,cAACwB,EAAA,EAAD,CAAMC,GAAE,gBAAApE,OAAmBF,EAAnB,MACP4C,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,oBAAoBE,MAAO,CACtCC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAKjBpB,EACCP,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,cACZlB,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,mBAAd,WAAyCF,GACzChB,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,mBAAd,UAAwCD,IAExC,eAxDIb,aCkBPwB,mLApBX,OACE5B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA9B,EAAa8B,EAAb9B,SACR,OACE+C,EAAAb,EAAAc,cAACD,EAAAb,EAAM0C,SAAP,KACE7B,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,kBACZlB,EAAAb,EAAAc,cAAA,QAAMiB,UAAU,eAAhB,YADF,QAGCjE,EAASO,IAAI,SAAAsE,GAAS,OACrB9B,EAAAb,EAAAc,cAAC8B,EAAD,CAASjD,IAAKgD,EAAU1E,GAAID,QAAS2E,gBAZ9B1B,8DCCjB4B,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAnB,EAMIkB,EANJlB,KACAhC,EAKIkD,EALJlD,MACAoD,EAIIF,EAJJE,YACArF,EAGImF,EAHJnF,KACAsF,EAEIH,EAFJG,cACAC,EACIJ,EADJI,MAEA,OACErC,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,cACblB,EAAAb,EAAAc,cAAA,SAAOqC,QAASvB,GAAOmB,GACvBlC,EAAAb,EAAAc,cAAA,SACEnD,KAAMA,EACNiE,KAAMA,EACNG,UAAWqB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbpD,MAAOA,EACP0D,SAAUL,IAEXC,GAASrC,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,oBAAf,IAAoCmB,KAepDL,EAAeU,aAAe,CAC5B5F,KAAM,QAGOkF,QCwEAW,6MA9Gb/F,MAAQ,CACNmE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,MAEVR,cAAgB,SAAA3B,GACd5C,EAAKc,SAAL5B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB0D,EAAEqC,OAAO/B,KAAON,EAAEqC,OAAO/D,WAG5CgE,+CAAW,SAAA1D,EAAOX,EAAU+B,GAAjB,IAAAuC,EAAAjC,EAAAC,EAAAC,EAAAgC,EAAA3D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEyC,iBADOF,EAGsBnF,EAAKjB,MAA5BmE,EAHCiC,EAGDjC,KAAMC,EAHLgC,EAGKhC,MAAOC,EAHZ+B,EAGY/B,MAGR,KAATF,EANK,CAAAvB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,uBAPzBvB,EAAA2D,OAAA,oBAWK,KAAVnC,EAXK,CAAAxB,EAAAE,KAAA,eAYP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,wBAZzBvB,EAAA2D,OAAA,oBAgBK,KAAVlC,EAhBK,CAAAzB,EAAAE,KAAA,gBAiBP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,wBAjBzBvB,EAAA2D,OAAA,yBAqBHF,EAAa,CACjBlC,OACAC,QACAC,SAxBOzB,EAAAE,KAAA,GA2BSC,IAAMyD,KACtB,6CACAH,GA7BO,QA2BH3D,EA3BGE,EAAAK,KAgCTnB,EAAS,CAAE5B,KAAM,cAAeO,QAASiC,EAAIQ,OAE7CjC,EAAKc,SAAS,CACZoC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,KAGV/E,EAAKqC,MAAMmD,QAAQC,KAAK,KAzCf,yBAAA9D,EAAAO,SAAAV,EAAAtB,yIA4CF,IAAA8C,EAAA9C,KAAAwF,EACgCxF,KAAKnB,MAApCmE,EADDwC,EACCxC,KAAMC,EADPuC,EACOvC,MAAOC,EADdsC,EACctC,MAAO2B,EADrBW,EACqBX,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,eAAf,eACAlB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAA,QAAM8C,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAMnC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,OACNnB,KAAK,OACLoB,YAAY,gBACZpD,MAAOgC,EACPqB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO7B,OAGhBf,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNnB,KAAK,QACLjE,KAAK,QACLqF,YAAY,iBACZpD,MAAOiC,EACPoB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO5B,QAGhBhB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNnB,KAAK,QAELoB,YAAY,iBACZpD,MAAOkC,EACPmB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO3B,QAGhBjB,EAAAb,EAAAc,cAAA,SACEnD,KAAK,SACLiC,MAAM,cACNmC,UAAU,wCAnGLd,aCkIVqD,6MAjIb7G,MAAQ,CACNmE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,MAkBVR,cAAgB,SAAA3B,GACd5C,EAAKc,SAAL5B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB0D,EAAEqC,OAAO/B,KAAON,EAAEqC,OAAO/D,WAG5CgE,+CAAW,SAAA1D,EAAOX,EAAU+B,GAAjB,IAAAuC,EAAAjC,EAAAC,EAAAC,EAAAyC,EAAAtG,EAAAkC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEyC,iBADOF,EAGsBnF,EAAKjB,MAA5BmE,EAHCiC,EAGDjC,KAAMC,EAHLgC,EAGKhC,MAAOC,EAHZ+B,EAGY/B,MAGR,KAATF,EANK,CAAAvB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,uBAPzBvB,EAAA2D,OAAA,oBAWK,KAAVnC,EAXK,CAAAxB,EAAAE,KAAA,eAYP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,wBAZzBvB,EAAA2D,OAAA,oBAgBK,KAAVlC,EAhBK,CAAAzB,EAAAE,KAAA,gBAiBP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,wBAjBzBvB,EAAA2D,OAAA,yBAqBHO,EAAa,CACjB3C,OACAC,QACAC,SAGM7D,EAAOS,EAAKqC,MAAMyD,MAAMC,OAAxBxG,GA3BCoC,EAAAE,KAAA,GA6BSC,IAAMkE,IAAN,8CAAAvG,OAC8BF,GAC9CsG,GA/BO,QA6BHpE,EA7BGE,EAAAK,KAkCTnB,EAAS,CAAE5B,KAAM,iBAAkBO,QAASiC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZoC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,KAGV/E,EAAKqC,MAAMmD,QAAQC,KAAK,KA5Cf,yBAAA9D,EAAAO,SAAAV,EAAAtB,6QAlBDX,EAAOW,KAAKmC,MAAMyD,MAAMC,OAAxBxG,YACUuC,IAAMC,IAAN,8CAAAtC,OAC8BF,WAD1CkC,SAIAnC,EAAUmC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZoC,KAAM5D,EAAQ4D,KACdE,MAAO9D,EAAQ8D,MACfD,MAAO7D,EAAQ6D,2IAuDV,IAAAH,EAAA9C,KAAAwF,EACgCxF,KAAKnB,MAApCmE,EADDwC,EACCxC,KAAMC,EADPuC,EACOvC,MAAOC,EADdsC,EACctC,MAAO2B,EADrBW,EACqBX,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,eAAf,gBACAlB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAA,QAAM8C,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAMnC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,OACNnB,KAAK,OACLoB,YAAY,gBACZpD,MAAOgC,EACPqB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO7B,OAGhBf,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNnB,KAAK,QACLjE,KAAK,QACLqF,YAAY,iBACZpD,MAAOiC,EACPoB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO5B,QAGhBhB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNnB,KAAK,QACLjE,KAAK,SACLqF,YAAalB,EACblC,MAAOkC,EACPmB,cAAevB,EAAKuB,cACpBC,MAAOO,EAAO3B,QAGhBjB,EAAAb,EAAAc,cAAA,SACEnD,KAAK,SACLiC,MAAM,eACNmC,UAAU,wCAtHJd,aCFpB0D,EAAS,SAAA5D,GAAS,IACd6D,EAAa7D,EAAb6D,SACR,OACE/D,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,2DAEblB,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAA,KAAG+D,KAAK,IAAI9C,UAAU,gBACnB6C,GAEH/D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,cACZlB,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,YACZlB,EAAAb,EAAAc,cAACwB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACtBlB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,gBADd,UAIFlB,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,YACZlB,EAAAb,EAAAc,cAACwB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YACjClB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,gBADd,SAIFlB,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,YACZlB,EAAAb,EAAAc,cAACwB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YACzBlB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,oBADhB,gBAYd4C,EAAOpB,aAAe,CACpBqB,SAAU,WAMGD,QC3CA,SAASG,IACtB,OACEjE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,aAAd,yBACAlB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,QAAb,iCACAlB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,kBAAb,kBCLS,SAASgD,IACtB,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIiB,UAAU,aAAd,qBAEElB,EAAAb,EAAAc,cAAA,KAAGiB,UAAU,QAAb,0CC+BOiD,6MAnCbvH,MAAQ,CACNwH,MAAO,GACPC,KAAM,uFAGY,IAAAxD,EAAA9C,KAClBuG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OACR5D,EAAKlC,SAAS,CACZyF,MAAOK,EAAKL,MACZC,KAAMI,EAAKJ,0CAYV,IAAArB,EACiBjF,KAAKnB,MAArBwH,EADDpB,EACCoB,MAAOC,EADRrB,EACQqB,KAEf,OACErE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKmE,GACLpE,EAAAb,EAAAc,cAAA,SAAIoE,WA9BOjE,aC4CJsE,gMA3BX,OACE1E,EAAAb,EAAAc,cAAC0E,EAAD,KACE3E,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,KACE5E,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,OACblB,EAAAb,EAAAc,cAAC4E,EAAD,CAAQd,SAAS,oBACjB/D,EAAAb,EAAAc,cAAA,OAAKiB,UAAU,aACblB,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,KACE9E,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IAEjC5B,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWvC,IAE5C3C,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWzB,IAEjDzD,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWjB,IAEtCjE,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IAErCnE,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOG,UAAWhB,gBAnBhB9D,cCLE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCZN4B,IAASC,OAAOxF,EAAAb,EAAAc,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.001c33fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contact: state.contacts.map( x =>\r\n        x.id === action.payload.id\r\n            ? (x = action.payload)\r\n            : x\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  /*componentDidMount() {\r\n    Widthout using async\r\n    /* fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json()) // with fetch https://jsonplaceholder.typicode.com\r\n      .then(json =>\r\n        this.setState({\r\n          contacts : json\r\n        })\r\n      ); \r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n      .then( res => this.setState( { contacts: res.data }))\r\n\r\n}*/\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    //.then(res => this.setState({ contacts: res.data }))\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../Components/contact.css\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onShowClick = e => {\r\n    this.setState({\r\n      //showContactInfo: false\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      //.then( res => dispatch({ type: 'DELETE_CONTACT', payload: id }) )\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    //const { contact } = this.props;\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={ `contact/edit/${id} `}>\r\n                 <i className=\"fas fa-pencil-alt\" style={{\r\n                   cursor: 'pointer',\r\n                   float: 'right',\r\n                   color: 'black',\r\n                   marginRight: '1rem'\r\n                 }}></i>\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email : {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map(contactOb => (\r\n                <Contact key={contactOb.id} contact={contactOb} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onFieldChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onFieldChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\"> {error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onFieldChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onFieldChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \" Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { name: \" email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { name: \" phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    //.then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    \r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email\r\n    });\r\n  }\r\n\r\n  onFieldChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \" Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { name: \" email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { name: \" phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    placeholder={phone}\r\n                    value={phone}\r\n                    onFieldChange={this.onFieldChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      \r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className=\"fas fa-home\"/> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n               <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                 <i className=\"fas fa-question\"/> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \" My app\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to Manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        404 Page Not Found\r\n        <p className=\"lead\">Sorry , that page does not exist</p>\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(json =>\r\n        this.setState({\r\n          title: json.title,\r\n          body: json.body\r\n        })\r\n      );\r\n  }\r\n  /*\r\n  componentWillMount( ) {\r\n    console.log('ComponentWillMount...')\r\n  }\r\n  componentDidUpdate() {\r\n    console.log('ComponentDidUpdate')\r\n  } */\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./Components/contacts/Contacts\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport AddContact from \"./Components/contacts/AddContact\";\nimport EditContact from \"./Components/contacts/EditContact\";\n\nimport Header from \"./Components/layout/Header\";\nimport About from \"./Components/pages/About\";\nimport NotFound from \"./Components/pages/NotFound\";\nimport Test from \"./Components/test/Test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n\n                <Route exact path=\"/contact/add\" component={AddContact} />\n\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\n                <Route exact path=\"/about\" component={About} />\n\n                <Route exact path=\"/test\" component={Test} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}